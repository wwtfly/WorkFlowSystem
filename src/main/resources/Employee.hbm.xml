<?xml version="1.0" encoding="UTF-8" ?>
<!--指定Hibernate映射文件的DTD信息-->
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--Hibernate 映射文件的根元素-->
<hibernate-mapping>
    <class name="Employee" table="emp_table" discriminator-value="1">
        <!--使用只读缓存-->
        <cache usage="read-only"/>
        <!--映射标示属性-->
        <id name="id" type="Integer" column="emp_id">
            <!--指定使用identity主键生成策略-->
            <generator class="identity"/>
        </id>
        <discriminator column="emp_type" type="int"/>
        <!--映射普通属性-->
        <property name="name" column="emp_name" type="string" not-null="true" length="50" unique="true"/>
        <property name="password" column="emp_pass" type="string" not-null="true" length="50"/>
        <property name="salary" column="emp_salary" type="double" not-null="true"/>
        <!--映射manager的关联关系,多对一的关系-->
        <many-to-one name="manager" column="mgr_id" class="Manager" lazy="false"/>
        <!--映射和Attend之间的关联关系，一个员工可以提多个申请单，一对多的关系-->
        <set name="attends" inverse="true">
            <!--N的一端对应的1的一端-->
            <key column="emp_id"/>
            <!--N的一端的类-->
            <one-to-many class="Attend"/>
        </set>
        <!--映射和payments之间的关联关系，员工可领多次薪水1对多关系-->
        <set name="payments" inverse="true">
            <key column="emp_id"/>
            <one-to-many class="Payment"/>
        </set>
        <!--映射Employee的子类Manager-->
        <subclass name="Manager" discriminator-value="2">
            <!--映射普通属性-->
            <property name="dept" column="dept_name" type="string" length="50"/>
            <!--映射和Employee之间的关联关系,经理和员工是一对多的关系-->
            <set name="employee" inverse="true">
                <key column="mgr_id"/>
                <one-to-many class="Employee"/>
            </set>
            <set name="checks" inverse="true">
                <key column="mgr_id"/>
                <one-to-many class="CheckBack"/>
            </set>
        </subclass>
    </class>
</hibernate-mapping>